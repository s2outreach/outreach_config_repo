# jwt config
jwt.header=Authorization
jwt.secret=jwtSecret
jwt.prefix=Bearer 
jwt.expiration=86400
jwt.uri="/auth/**"

spring.profiles=local
#eureka config
eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER:http://localhost:8761/eureka}
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true

#aws dynamodb config
amazon.end-point.url=${AWS_DYNAMODB_ENDPOINT:http://localhost:8000}
amazon.access.key=${AWS_DYNAMODB_ACCESS_KEY:}
amazon.access.secret-key=${AWS_DYNAMODB_SECRET_KEY:}
amazon.region=${AWS_DYNAMODB_REGION:}

#kafka config
spring.kafka.producer.bootstrap-servers=${KAFKASERVER:localhost:9093}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.add-log=addlog
kafka.group-id=group-id

#mysql config
spring.datasource.url=${DATASOURCEURL:jdbc:mysql://localhost:3306/outreach?useSSL=false}
spring.datasource.username=${DBUSER:root}
spring.datasource.password=${DBPASSWORD:pass@word1}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

---
spring.profiles=aws

#eureka config
eureka.client.serviceUrl.defaultZone=http://13.232.168.181:8761/eureka
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true

#aws dynamodb config
amazon.end-point.url=
amazon.access.key=
amazon.access.secret-key=
amazon.region=

#kafka config
spring.kafka.producer.bootstrap-servers=
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.add-log=addlog
kafka.group-id=group-id

#mysql config
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
